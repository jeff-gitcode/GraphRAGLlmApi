@host = http://localhost:5209

### Health check
GET {{host}}/healthz
Accept: application/json

### Document Operations ###

### Index a document
POST {{host}}/api/documents/index
Content-Type: application/json

{
  "title": "Understanding GraphRAG",
  "content": "GraphRAG (Graph Retrieval Augmented Generation) combines the power of graph databases with RAG approaches to enhance LLM responses by providing structured relationship context between documents.",
  "metadata": {
    "author": "AI Researcher",
    "tags": ["graphrag", "llm", "knowledge-graphs"]
  }
}

### Generate a response based on indexed content
POST {{host}}/api/documents/generate-response
Content-Type: application/json

{
  "query": "Explain the benefits of GraphRAG over traditional RAG approaches"
}

### Get similar documents by query
GET {{host}}/api/documents/similar-documents?query=knowledge%20graphs
Accept: application/json

### Get graph connections for document
GET {{host}}/api/documents/graph-connections?documentId=00000000-0000-0000-0000-000000000001
Accept: application/json

### Get document by ID
GET {{host}}/api/documents/00000000-0000-0000-0000-000000000001
Accept: application/json

### Query Operations ###

### Get similar documents by embedding
POST {{host}}/api/queries/similar-documents
Content-Type: application/json

{
  "query": "How does GraphRAG improve information retrieval?",
  "limit": 5
}

### Generate embedding for text
POST {{host}}/api/embeddings/generate
Content-Type: application/json

{
  "text": "Understanding vector databases and their applications in GraphRAG"
}

### Database Setup ###

### Check database status
GET {{host}}/api/system/database-status
Accept: application/json

### Create vector extension
POST {{host}}/api/system/initialize-database
Accept: application/json

### Delete all documents (CAUTION!)
DELETE {{host}}/api/documents
Accept: application/json
